{"version":3,"sources":["types/object.js"],"names":[],"mappings":"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","file":"types/object.js","sourcesContent":["/**\n * Schematik.Object\n *\n * @author          Denis Luchkin-Zhou <wyvernzora@gmail.com>\n * @license         MIT\n */\n\nimport Schematik       from '../schematik';\n\nimport Range           from '../addons/range';\nimport Additional      from '../addons/additional';\n\nimport * as Config     from '../config';\nimport { isSchematik,\n         arrayConcat } from '../util';\nimport { schema }      from '../util/symbols';\nimport instantiate     from '../util/instantiate';\n\n/**\n * Schematik.Object\n *\n * @classdesc       Schematik object type representation.\n */\nexport class SkObject extends Schematik {\n\n  constructor() {\n    super();\n    this.__type('object');\n    this[schema] = this[schema]\n      .merge({ additionalProperties: Config.allowAdditionalProperties });\n  }\n\n\n  /**\n   * .pattern\n   *\n   * @access        public\n   * @desc          Sets the `pattern` flag to true.\n   * @returns       A copy of the Schematik with the `pattern` flag set.\n   */\n  static __pattern() {\n    return this.flag('pattern', true);\n  }\n\n\n  /**\n   * .count()\n   *\n   * @access        public\n   * @desc          Sets the property count of the object. Behavior of this\n   *                function depends on the `range` flag and number of args.\n   * @param         {a} the first property count value.\n   * @param         {b} the second property count value.\n   * @returns       A copy of the Schematik with the property count set.\n   */\n  static __count(a, b) {\n    if (typeof a !== 'number') {\n      throw new Error('Count value must be a number.');\n    }\n\n    const diff = { };\n    if (this.flag('range') === 'min') {\n      const max = this.schema('maxProperties');\n      if (max !== undefined && max < a) {\n        throw new Error('{min} cannot be greater than {max}');\n      }\n      diff.minProperties = a;\n    } else if (this.flag('range') === 'max') {\n      const min = this.schema('minProperties');\n      if (min !== undefined && min > a) {\n        throw new Error('{max} cannot be less than {min}');\n      }\n      diff.maxProperties = a;\n    } else if (typeof b === 'number') {\n      if (b < a) {\n        throw new Error('{min} cannot be greater than {max}');\n      }\n      diff.minProperties = a;\n      diff.maxProperties = b;\n    } else {\n      diff.minProperties = diff.maxProperties = a;\n    }\n\n    return this.schema(diff).flag('range', null);\n  }\n\n\n  /**\n   * .property()\n   *\n   * @access        public\n   * @desc          Adds a property along with its schema.\n   * @param         {key} name of the property.\n   * @param         {schema} schema for the property value.\n   * @returns       A copy of the Schematik with the property added.\n   */\n  static __property(key, schema) {\n    const overwrite  = Config.allowPropertyOverwrite;\n    const additional = Config.allowAdditionalProperties;\n\n    // additionalProperties mode\n    if (this.flag('additional')) {\n      const current = this.schema('additionalProperties');\n      if (!overwrite && current !== additional && additional !== undefined) {\n        throw new Error('Cannot overwrite additional properties.');\n      }\n\n      // Apply the `negate` flag if there are no arguments\n      if (arguments.length === 0) {\n        return this\n          .schema({ additionalProperties: !this.flag('negate') })\n          .flag('additional', false)\n          .flag('pattern',    false)\n          .flag('negate',     false);\n      }\n\n      const value = arguments[0];\n      if (typeof value !== 'boolean' && typeof value !== 'object') {\n        throw new Error('Additional property must be a boolean or an object.');\n      }\n\n      schema = isSchematik(value) ? value.done() : value;\n      return this\n        .schema({ additionalProperties: schema })\n        .flag('additional', false)\n        .flag('pattern',    false)\n        .flag('negate',     false);\n    }\n\n    // Check that schema is valid\n    if (typeof schema !== 'object') {\n      throw new Error('Schema must be an object.');\n    }\n    let required = false;\n    if (isSchematik(schema)) {\n      required = schema.flag('required');\n      schema   = schema.done();\n    }\n\n    // patternProperties mode\n    if (this.flag('pattern')) {\n      if (!(key instanceof RegExp)) {\n        throw new Error('Key must be a RegExp.');\n      }\n      const current = this.schema('patternProperties');\n      if (!overwrite && current && current[key.source]) {\n        throw new Error(`Cannot overwrite pattern property: ${key.source}`);\n      }\n\n      const diff = { patternProperties: { [key.source]: schema } };\n      return this.flag('pattern', false).schema(diff, true);\n    }\n\n    // properties mode\n    if (typeof key !== 'string') {\n      throw new Error('Key must be a string.');\n    }\n    const current = this.schema('properties');\n    if (!overwrite && current && current[key]) {\n      throw new Error(`Cannot overwrite property: ${key}`);\n    }\n\n\n    const diff = { properties: { [key]: schema } };\n    const creq = this.schema('required');\n    if (required) { diff.required = arrayConcat(creq, key); }\n    return this.schema(diff, true);\n\n  }\n\n\n  /**\n   * .properties()\n   *\n   * @access        public\n   * @desc          Adds multiple properties along with their schemas.\n   * @param         {value} a hash of property names to their schemas.\n   * @returns       A copy of the Schematik with the properties added.\n   */\n  static __properties(value) {\n\n    // If there is an `additional` flag, value must be undefined\n    if (this.flag('additional')) {\n      if (value !== undefined) {\n        throw new Error('Value not supported with `additional` flag.');\n      }\n      return this.additional.property();\n    }\n\n    if (typeof value !== 'object') {\n      throw new Error('Value must be an object.');\n    }\n\n    const pattern = this.flag('pattern') || false;\n    return Object.keys(value).reduce((schema, key) => {\n      const s = value[key];\n      if (pattern) { key = new RegExp(key); }\n      return schema.flag('pattern', pattern).property(key, s);\n    }, this);\n  }\n\n}\n\n\n/*!\n * Export a middleware function.\n */\nexport default function(Schematik, Util) {\n\n  /*!\n   * Expose SkObject as Schematik.Object\n   */\n  Schematik.Object = SkObject;\n\n  /*!\n   * Attach the Schematik.object() shorthand.\n   */\n  Schematik.object = Schematik.prototype.object = function() {\n    return instantiate(this.self(), Schematik.Object);\n  };\n\n  /*!\n   * Attach shared flags.\n   */\n  Range(Schematik.Object.prototype, Util);\n  Additional(Schematik.Object.prototype, Util);\n\n  /*!\n   * Attach object-specific properties.\n   */\n  const proto = Schematik.Object.prototype;\n  Util.addProperty(proto,  'pattern',    SkObject.__pattern);\n  Util.addChainable(proto, 'count',      SkObject.__count);\n  Util.addChainable(proto, 'property',   SkObject.__property);\n  Util.addChainable(proto, 'properties', SkObject.__properties);\n}\n"],"sourceRoot":"/source/"}