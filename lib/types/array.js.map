{"version":3,"sources":["types/array.js"],"names":[],"mappings":"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","file":"types/array.js","sourcesContent":["/**\n * Schematik.Array\n *\n * @author          Denis Luchkin-Zhou <wyvernzora@gmail.com>\n * @license         MIT\n */\n\nimport Schematik    from '../schematik';\nimport { schema }   from '../util/symbols';\nimport instantiate  from '../util/instantiate';\n\nimport Range        from '../addons/range';\nimport Unique       from '../addons/unique';\nimport Additional   from '../addons/additional';\nimport concat       from '../util/array-concat';\n\n/**\n * Schematik.Array\n *\n * @classdesc       Schematik array type representation.\n */\nexport class SkArray extends Schematik {\n\n  constructor() {\n    super();\n    this.__type('array');\n  }\n\n  /**\n   * .done()\n   *\n   * @override\n   */\n  done() {\n    const result = super.done();\n    if (this.flag('unique')) { result.uniqueItems = true; }\n    return result;\n  }\n\n  /**\n   * # .items()\n   *\n   * @desc            Specifies array item schemas.\n   * @returns         A copy of Schematik with item schemas set.\n   */\n  static __items(...values) {\n\n    // If we have the `additional` flag, modify `additionalItems` instead\n    if (this.flag('additional')) {\n      let value = values[0] === undefined ? true : values[0];\n      if (this.flag('negate')) { value = false; }\n\n      if (typeof value !== 'object' && typeof value !== 'boolean') {\n        throw new Error('Schematik.Array.items: value must be object or bool.');\n      }\n\n      value = value instanceof Schematik ? value.done() : value;\n      return this.schema({ additionalItems: value });\n    }\n\n    if (arguments.length === 0) {\n      throw new Error('Schematik.Array.items: need at least one argument.');\n    }\n\n    // Map all items to their final object forms\n    values = values.map(i => (i instanceof Schematik) ? i.done() : i);\n\n    // If current schema.items is a single object, wrap it into array\n    let current = this[schema].items;\n    current = concat(current, ...values);\n    current = current.length === 1 ? current[0] : current;\n\n    return this.schema({ items: current });\n\n  }\n\n  /**\n   * # .length()\n   *\n   * @desc            Specifies array length.\n   * @returns         A copy of Schematik with array lengths set.\n   */\n  static __length(a, b) {\n    if (typeof a !== 'number') {\n      throw new Error('Schematik.Array.length: length must be a number.');\n    }\n\n    const diff = { };\n    if      (this.flag('range') === 'max') {\n      diff.maxItems = a;\n    } else if (this.flag('range') === 'min') {\n      diff.minItems = a;\n    } else if (typeof b === 'number') {\n      diff.minItems = a;\n      diff.maxItems = b;\n    } else {\n      diff.minItems = diff.maxItems = a;\n    }\n\n    return this.schema(diff).flag('range', null);\n  }\n\n}\n\n\n/*!\n * Export a middleware function.\n */\nexport default function(schematik, Util) {\n\n  /*!\n   * Expose SkArray class as Schematik.Array\n   */\n  schematik.Array = SkArray;\n\n  /*!\n   * Attach the Schematik.array() shorthand.\n   */\n  schematik.array = schematik.prototype.array = function() {\n    return instantiate(this.self(), schematik.Array);\n  };\n\n  const proto = schematik.Array.prototype;\n\n  /*!\n   * Attach shared flags\n   */\n  Range(proto, Util);\n  Unique(proto, Util);\n  Additional(proto, Util);\n\n  /*!\n   * Attach array-specific methods.\n   */\n  Util.addChainable(proto, 'items',  SkArray.__items);\n  Util.addChainable(proto, 'len',    SkArray.__length);\n  Util.addChainable(proto, 'count',  SkArray.__length);\n  Util.addChainable(proto, 'length', SkArray.__length);\n\n  /*!\n   * Allow\n   */\n\n}\n"],"sourceRoot":"/source/"}