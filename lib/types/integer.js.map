{"version":3,"sources":["types/integer.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;sBAOyB,UAAU;;+BACV,qBAAqB;;;;;;;;;;IAOjC,SAAS;YAAT,SAAS;;AAET,WAFA,SAAS,GAEN;0BAFH,SAAS;;AAGlB,+BAHS,SAAS,6CAGV;AACR,QAAI,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;GAC9B;;;;;SALU,SAAS;;;;;qBAYP,UAAS,SAAS,EAAE;;;;;AAKjC,WAAS,CAAC,OAAO,GAAG,SAAS,CAAC;;;;;AAK9B,WAAS,CAAC,OAAO,GAAG,SAAS,CAAC,SAAS,CAAC,OAAO,GAAG,YAAW;AAC3D,WAAO,kCAAY,IAAI,CAAC,IAAI,EAAE,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC;GACpD,CAAC;CAEH","file":"types/integer.js","sourcesContent":["/**\n * Schematik.Integer\n *\n * @author          Denis Luchkin-Zhou <wyvernzora@gmail.com>\n * @license         MIT\n */\n\nimport { SkNumber } from './number';\nimport instantiate  from '../util/instantiate';\n\n/**\n * Schematik.Integer\n *\n * @classdesc       Schematik integer type representation.\n */\nexport class SkInteger extends SkNumber {\n\n  constructor() {\n    super();\n    this.__type('integer', true);\n  }\n\n}\n\n/*!\n * Export a middleware function.\n */\nexport default function(Schematik) {\n\n  /*!\n   * Expose SkInteger as Schematik.Integer\n   */\n  Schematik.Integer = SkInteger;\n\n  /*!\n   * Attach the Schematik.integer() shorthand.\n   */\n  Schematik.integer = Schematik.prototype.integer = function() {\n    return instantiate(this.self(), Schematik.Integer);\n  };\n\n}\n"],"sourceRoot":"/source/"}