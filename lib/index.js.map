{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;yBAOyB,aAAa;;;;sBACb,UAAU;;IAAvB,MAAM;;oBACO,QAAQ;;IAArB,IAAI;;0BAES,eAAe;;;;4BACf,iBAAiB;;;;0BACjB,eAAe;;;;4BACf,iBAAiB;;;;4BACjB,iBAAiB;;;;yBACjB,cAAc;;;;2BACd,gBAAgB;;;;2BAChB,gBAAgB;;;;2BAChB,gBAAgB;;;;;;;;;AAOzC,IAAM,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;;AAEzD,IAAI,UAAU,EAAE;AACd,SAAO,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,CAAC;CAC/B;;;;;AAMD,uBAAU,OAAO,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC;;;;;AAMvD,IAAM,UAAU,GAAG,IAAI,GAAG,EAAE,CAAC;;;;;;;;;;AAW7B,uBAAU,GAAG,GAAG,UAAS,EAAE,EAAE;AAC3B,MAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AACvB,MAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACf,cAAU,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;GACpB;AACD,SAAO,IAAI,CAAC;CACb,CAAC;;;;;AAMF,uBAAU,MAAM,GAAG,MAAM,CAAC;AAC1B,uBAAU,IAAI,GAAK,IAAI,CAAC;;;;;AAMxB,uBAAU,GAAG,yBAAU,CAAC;AACxB,uBAAU,GAAG,2BAAY,CAAC;;;;;AAM1B,uBAAU,GAAG,yBAAS,CAAC;AACvB,uBAAU,GAAG,2BAAW,CAAC;AACzB,uBAAU,GAAG,2BAAW,CAAC;AACzB,uBAAU,GAAG,wBAAQ,CAAC;AACtB,uBAAU,GAAG,0BAAU,CAAC;AACxB,uBAAU,GAAG,0BAAU,CAAC;AACxB,uBAAU,GAAG,0BAAU,CAAC","file":"index.js","sourcesContent":["/**\n * Schematik\n *\n * @author          Denis Luchkin-Zhou <wyvernzora@gmail.com>\n * @license         MIT\n */\n\nimport Schematik    from './schematik';\nimport * as Config  from './config';\nimport * as Util    from './util';\n\nimport FlagCore     from './addons/core';\nimport FlagUnique   from './addons/unique';\nimport SkArray      from './types/array';\nimport SkBoolean    from './types/boolean';\nimport SkInteger    from './types/integer';\nimport SkNull       from './types/null';\nimport SkNumber     from './types/number';\nimport SkObject     from './types/object';\nimport SkString     from './types/string';\n\nexport default Schematik;\n\n/*!\n * Enable source map support if `source-map-support` is installed\n */\nconst sourcemaps = require.resolve('source-map-support');\n/* istanbul ignore else */\nif (sourcemaps) {\n  require(sourcemaps).install();\n}\n\n\n/*!\n * Load the module version from package.json\n */\nSchematik.version = require('../package.json').version;\n\n\n/*!\n * Use a set to track middleware\n */\nconst middleware = new Set();\n\n\n/**\n * .use()\n *\n * @access          public\n * @desc            Extends the Schematik using the middleware.\n * @param           {fn} the middleware function.\n * @returns         {Schematik} class constructor for chaining.\n */\nSchematik.use = function(fn) {\n  if (!middleware.has(fn)) {\n    fn(this, Util);\n    middleware.add(fn);\n  }\n  return this;\n};\n\n\n/*!\n * Expose Schematik utilities via Schematik.util\n */\nSchematik.config = Config;\nSchematik.util   = Util;\n\n\n/*!\n * Attach global flags to the Schematik.\n */\nSchematik.use(FlagCore);\nSchematik.use(FlagUnique);\n\n\n/*!\n * Attach builtin Schematik types.\n */\nSchematik.use(SkArray);\nSchematik.use(SkBoolean);\nSchematik.use(SkInteger);\nSchematik.use(SkNull);\nSchematik.use(SkNumber);\nSchematik.use(SkObject);\nSchematik.use(SkString);\n"],"sourceRoot":"/source/"}