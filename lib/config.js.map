{"version":3,"sources":["config.js"],"names":[],"mappings":";;;;;;;;;AAOA,MAAM,CAAC,OAAO,GAAG;;;;;AAKf,cAAY,EAAE;AACZ,YAAQ,EAAG,IAAI;GAChB;;;;;AAMD,SAAO,EAAE,KAAK;;;;;AAMd,oBAAkB,EAAE,KAAK;;;;;;AAOzB,2BAAyB,EAAE,IAAI;;;;;AAM/B,wBAAsB,EAAE,KAAK;;;;;AAM7B,cAAY,EAAE,IAAI,GAAG,CACnB,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAC/D,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAC/C;;;;;;AAMD,kBAAgB,EAAE,IAAI,GAAG,CACvB,CAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAE,CACxE;;CAGF,CAAC","file":"config.js","sourcesContent":["/**\n * Schematik.config\n *\n * @author          Denis Luchkin-Zhou <wyvernzora@gmail.com>\n * @license         MIT\n */\n\nmodule.exports = {\n\n  /*!\n   * Default flags that will be used for initializing new Schematiks.\n   */\n  defaultFlags: {\n    required:  true\n  },\n\n\n  /*!\n   * If true, disables hiding of special properties behind symbols.\n   */\n  devMode: false,\n\n\n  /*!\n   * If true, allows overwriting the `type` property of the schema.\n   */\n  allowTypeOverwrite: false,\n\n\n  /*!\n   * If true, allows additional properties in objects by default unless\n   * explicitly specified otherwise.\n   */\n  allowAdditionalProperties: true,\n\n\n  /*!\n   * If true, allows overwriting existing object schema properties.\n   */\n  allowPropertyOverwrite: false,\n\n\n  /*!\n   * Set of conjunctions that return the Schematik without modifications.\n   */\n  conjunctions: new Set(\n    ['to', 'be', 'been', 'is', 'that', 'which', 'and', 'has', 'have',\n     'with', 'at', 'same', 'in', 'a', 'an', 'the']\n  ),\n\n  /*!\n   * Set of type names that are allowed.\n   * See section 3.5 of <http://json-schema.org/latest/json-schema-core.html>\n   */\n  whitelistedTypes: new Set(\n    [ 'array', 'boolean', 'integer', 'number', 'null', 'object', 'string' ]\n  )\n\n\n};\n"],"sourceRoot":"/source/"}